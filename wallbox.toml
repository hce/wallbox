# On startup, try to connect that many seconds before
# giving up and terminating with a fatal error
initial_connection_timeout = 60

# Address of the PV system
e3dc = { host = "192.168.34.10", port = 502 }

# Address of the EV charging station
wallbox = { host = "192.168.34.12", port = 502 }

# OnePhase or ThreePhase, this is used to compute the power per amp
phases = "ThreePhase"

# After a vehicle is connected and starts to charge, use the
# default_amps setting regardless of the PV power available for this
# many seconds. The primary purpose of this setting is that some
# vehicles get confused when they are signalled that no power is
# available immediately after being connected. 180 seconds should be a
# reasonable default.
initial_phase_duration = 180

# Whenever no vehicle is connected to the EV charger, set the allowed current
# to this value. Some vehicles refuse to charge at all if the allowed current
# is zero when connected. Also, this serves as a failsafe: If the management
# code is prevented from running for any reason, your charger will still work,
# even if at a reduced power setting. You should choose a value here that all
# vehicles you intend to charge can deal with. 8 Amps is a reasonable default.
default_amps = 8

# The voltage per phase, used to compute ther power per amp
phase_voltage = 230

# If there is some excessive power available from the PV system, we'd
# slowly increase the charging power by one amp at a time. This
# setting specifies how many additional watts have to be available
# before the increase happens. For example, on a 230V three phase
# system, increasing the charging current from 8 amps to 9 amps would
# increase the charging power from 5520 Watts to 6210 Watts, the
# difference being 690 Watts. With a hysteresis of 200 Watts, the
# amount of surplus power has to be 890 Watts before the increase from
# 8 Amps to 9 Amps happens.
hysteresis_watts = 200

# Bind to a TCP socket to export the currently measured values. This
# can be used to monitor the PV system and EV charger by external
# scripts. For example, you can write a simple munin script to plot
# the measured values. Many connections can be made to this server in
# parallel. This is read only. Once every few seconds, one line is
# sent that contains the data in JSON format, terminated with a
# newline character.
bind_to = "localhost:4739"

# This section contains configuration per RFID token used. For each
# RFID token, you can specify the charging behavior individually. Be
# sure to remove any trailing spaces from the RFID tag and use CAPITAL
# letters for hexadecimal digits only.

[rfid.041dxxxxxxxxxx]
# The name of the RFID tag
name = "ADAC Ladekarte"
# Charge regardless of the sun shining or not
pv_only = false
# The minimum current to use when charging. This should be
# set to the minimum value that the vehicle can handle.
# For example, some vehicles can handle no less than 8 amps.
# So, set min_amp to 8 Amps. If you want the charging process
# to stop completely when there is not enough solar power available,
# set the pv_only parameter to true in addition.
min_amp = 8
# The maximum current supported by the EV charging station
max_amp = 16
# Limit the energy to charge per transaction to 30000 Watthours
max_charge = 30000

[rfid.046bxxxxxxxxxx]
name = "Maria"
# If no PV power is available, halt the charging process.
pv_only = true
min_amp = 8
max_amp = 16
# Some vehicles consume *significantly* less power in the min_amp setting
# than they do with min_amp+1. This may be due to a high amount of
# reactive power or some other reason I haven't been able to figure out yet.
# This setting overrides the computed charging power for the min_amp setting.
# It is only necessary to specify it for RFID cards that have the
# pv_only setting set to true, because otherwise, the min_amp setting will
# be applied anyway (and not 0 to stop the charging process).
minimum_charging_power = 2300

[rfid.042Exxxxxxxxxx]
name = "misc 1"
pv_only = true
min_amp = 8
max_amp = 16
minimum_charging_power = 2300

[rfid.0435xxxxxxxxxx]
name = "misc 2"
pv_only = false
min_amp = 8
max_amp = 16

[rfid.0479xxxxxxxxxx]
name = "misc 3"
pv_only = true
min_amp = 8
max_amp = 16
minimum_charging_power = 2300

